{"ast":null,"code":"var _jsxFileName = \"/home/gradjaku/Documents/Full Stack/part2/Phonebook/2.20/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { showFiltered } from './components/showFiltered';\nimport Note from './components/Note';\nimport ShowAll from './components/showAll';\nimport ShowFiltered from './components/showFiltered';\nimport AddPerson2 from './components/AddPerson2';\nimport backup from './list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //The online REST doesnt always work, hence list is by default backup. Later it is declared as online REST\n  //let list = backup\n  //console.log(\"the list from list.js: \",list)\n  let text = \"Hello world, welcome to the universe.\"; //console.log(result)\n  //below three lines added for the example from material.\n\n  const [newSearch, setNewSearch] = useState('');\n  const [currentFilter, setCurrentFilter] = useState('');\n  const [list, setList] = useState();\n  useEffect(() => {\n    //console.log('requesting weather from openweather')\n    const api_key = process.env.REACT_APP_API_KEY;\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=Helsinki&appid=${api_key}`).then(() => {\n      console.log('promise of test weather fulfilled'); //console.log(\"Weather from weather REST: (response.data)\",response.data)\n      //console.log(\"response \", response)\n    }); //console.log('requesting countries from restcountries')\n\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      console.log('promise of countries fulfilled');\n      setCountries(response.data); //console.log(\"Countries from internet REST: \",response.data)\n      //console.log(response.data)\n\n      setList(response.data);\n    });\n  }, []); //List declared as countries, meaning that program uses online REST\n  //list = countries\n\n  const handleSearchInputChange = event => {\n    //console.log(event.target.value)\n    setNewSearch(event.target.value);\n    setCurrentFilter(event.target.value);\n  }; //const filtered = persons.filter(d => d[\"name\"].toUpperCase().includes(currentFilter.toUpperCase()))\n\n\n  if (list) {\n    const filtered = list.filter(d => d[\"name\"][\"common\"].toUpperCase().includes(currentFilter.toUpperCase())); //console.log(\"filtered: \", filtered)\n\n    for (let keys in list[13][\"languages\"]) {//console.log(\"elements: \",elements);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: newSearch,\n            onChange: handleSearchInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), newSearch === \"\" && currentFilter === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Be more specifc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ShowFiltered, {\n        filtered: filtered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(App, \"bX5WBZtYNSpmjVOpZNQo6pf/Zo8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","showFiltered","Note","ShowAll","ShowFiltered","AddPerson2","backup","App","text","newSearch","setNewSearch","currentFilter","setCurrentFilter","list","setList","api_key","process","env","REACT_APP_API_KEY","get","then","console","log","response","setCountries","data","handleSearchInputChange","event","target","value","filtered","filter","d","toUpperCase","includes","keys"],"sources":["/home/gradjaku/Documents/Full Stack/part2/Phonebook/2.20/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { showFiltered } from './components/showFiltered'\nimport Note from './components/Note'\nimport ShowAll from './components/showAll'\nimport ShowFiltered from './components/showFiltered';\nimport AddPerson2 from './components/AddPerson2';\nimport backup from './list'\n\n\nconst App = () => {\n  //The online REST doesnt always work, hence list is by default backup. Later it is declared as online REST\n  //let list = backup\n  //console.log(\"the list from list.js: \",list)\n  let text = \"Hello world, welcome to the universe.\";\n  //console.log(result)\n  //below three lines added for the example from material.\n  const [newSearch, setNewSearch] = useState('')\n  const [currentFilter, setCurrentFilter] = useState('')\n  const [list, setList] = useState()\n\n  useEffect(() => {\n    //console.log('requesting weather from openweather')\n    const api_key = process.env.REACT_APP_API_KEY\n    axios\n      .get(`https://api.openweathermap.org/data/2.5/weather?q=Helsinki&appid=${api_key}`)\n      .then(() => {\n        console.log('promise of test weather fulfilled')\n        //console.log(\"Weather from weather REST: (response.data)\",response.data)\n        //console.log(\"response \", response)\n      })\n    //console.log('requesting countries from restcountries')\n    axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        console.log('promise of countries fulfilled')\n        setCountries(response.data)\n        //console.log(\"Countries from internet REST: \",response.data)\n        //console.log(response.data)\n        setList(response.data)\n      })\n  }, [])\n\n  //List declared as countries, meaning that program uses online REST\n  //list = countries\n  \n  \n  const handleSearchInputChange = (event) => {\n    //console.log(event.target.value)\n    setNewSearch(event.target.value)\n    setCurrentFilter(event.target.value)\n  }\n\n  //const filtered = persons.filter(d => d[\"name\"].toUpperCase().includes(currentFilter.toUpperCase()))\n  if(list) {\n    const filtered = list.filter(d => d[\"name\"][\"common\"].toUpperCase().includes(currentFilter.toUpperCase()))\n    //console.log(\"filtered: \", filtered)\n  \n    for(let keys in list[13][\"languages\"]){\n      //console.log(\"elements: \",elements);\n    }\n    return (\n      <div>    \n            <form>\n          <div>\n            find countries:\n            <input \n            value={newSearch}\n            onChange={handleSearchInputChange}\n            />\n          \n          </div>\n        </form>\n  \n        \n        \n  \n        {\n        newSearch === \"\" && currentFilter === \"\"\n        ? <div>Be more specifc</div>\n        : <ShowFiltered filtered = {filtered} />\n        }\n        \n      </div>\n    )\n  }\n  \n}\n\nexport default App\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA;EACA;EACA,IAAIC,IAAI,GAAG,uCAAX,CAJgB,CAKhB;EACA;;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,EAAhC;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;IACAlB,KAAK,CACFmB,GADH,CACQ,oEAAmEJ,OAAQ,EADnF,EAEGK,IAFH,CAEQ,MAAM;MACVC,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADU,CAEV;MACA;IACD,CANH,EAHc,CAUd;;IACAtB,KAAK,CACFmB,GADH,CACO,oCADP,EAEGC,IAFH,CAEQG,QAAQ,IAAI;MAChBF,OAAO,CAACC,GAAR,CAAY,gCAAZ;MACAE,YAAY,CAACD,QAAQ,CAACE,IAAV,CAAZ,CAFgB,CAGhB;MACA;;MACAX,OAAO,CAACS,QAAQ,CAACE,IAAV,CAAP;IACD,CARH;EASD,CApBQ,EAoBN,EApBM,CAAT,CAXgB,CAiChB;EACA;;EAGA,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;IACzC;IACAjB,YAAY,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;IACAjB,gBAAgB,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;EACD,CAJD,CArCgB,CA2ChB;;;EACA,IAAGhB,IAAH,EAAS;IACP,MAAMiB,QAAQ,GAAGjB,IAAI,CAACkB,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAAC,MAAD,CAAD,CAAU,QAAV,EAAoBC,WAApB,GAAkCC,QAAlC,CAA2CvB,aAAa,CAACsB,WAAd,EAA3C,CAAjB,CAAjB,CADO,CAEP;;IAEA,KAAI,IAAIE,IAAR,IAAgBtB,IAAI,CAAC,EAAD,CAAJ,CAAS,WAAT,CAAhB,EAAsC,CACpC;IACD;;IACD,oBACE;MAAA,wBACM;QAAA,uBACF;UAAA,2CAEE;YACA,KAAK,EAAEJ,SADP;YAEA,QAAQ,EAAEiB;UAFV;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADE;QAAA;QAAA;QAAA;MAAA,QADN,EAgBEjB,SAAS,KAAK,EAAd,IAAoBE,aAAa,KAAK,EAAtC,gBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,gBAEE,QAAC,YAAD;QAAc,QAAQ,EAAImB;MAA1B;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAwBD;AAEF,CA7ED;;GAAMvB,G;;KAAAA,G;AA+EN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}