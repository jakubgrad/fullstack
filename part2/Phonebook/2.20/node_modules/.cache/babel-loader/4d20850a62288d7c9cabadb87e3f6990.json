{"ast":null,"code":"var _jsxFileName = \"/home/gradjaku/Documents/Full Stack/part2/Phonebook/2.13/src/components/showFiltered.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowFiltered = _ref => {\n  _s();\n\n  let {\n    filtered\n  } = _ref;\n  console.log(\"from show filtered\", filtered);\n  var elements = [];\n  const [showCountry, setShowCountry] = useState(Array(10).fill(0));\n  const [selectCountry, setSelectCountry] = useState(filtered); //const newArray = showCountry.copy()\n  //console.log(newArray)\n\n  console.log(\"show country\", showCountry);\n\n  if (filtered.length === 1) {\n    for (let keys in filtered[0][\"languages\"]) {\n      elements = elements.concat(filtered[0][\"languages\"][keys]);\n      console.log(\"elements from conditional: \", elements);\n    }\n  }\n\n  const chooseCountry = event => {\n    event.preventDefault(); //setCurrentFilter(newSearch)\n\n    console.log(\"new countr chosen\");\n    console.log(event.target.id);\n    setSelectCountry(event.target.id);\n    console.log(\"d\");\n    filtered = 0;\n    console.log(selectCountry);\n    setShowCountry(filtered[0]);\n    console.log(filtered);\n    console.log(\"show country is now: \", showCountry);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filtered.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: filtered[0][\"name\"][\"common\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"capital \", filtered[0][\"capital\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"area \", filtered[0][\"area\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"languages:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: elements.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: p\n        }, p, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filtered[0][\"flag\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this) : filtered.length > 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : selectCountry === \"United Arab Emirates\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"United Arabs\", console.log(\"from the loop\", showCountry)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this) : filtered.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [p[\"name\"][\"common\"], /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: chooseCountry,\n        id: p[\"name\"][\"common\"],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this)]\n    }, p[\"name\"][\"common\"], true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShowFiltered, \"Qp2wifhCudxhOZZTZyQvZ0XjXgo=\");\n\n_c = ShowFiltered;\nexport default ShowFiltered;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowFiltered\");","map":{"version":3,"names":["useState","useEffect","ShowFiltered","filtered","console","log","elements","showCountry","setShowCountry","Array","fill","selectCountry","setSelectCountry","length","keys","concat","chooseCountry","event","preventDefault","target","id","map","p"],"sources":["/home/gradjaku/Documents/Full Stack/part2/Phonebook/2.13/src/components/showFiltered.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nconst ShowFiltered = ({ filtered }) => {\n    console.log(\"from show filtered\", filtered);\n    var elements = []\n    const [showCountry, setShowCountry] = useState(Array(10).fill(0))\n    const [selectCountry, setSelectCountry] = useState(filtered)\n    //const newArray = showCountry.copy()\n    //console.log(newArray)\n    console.log(\"show country\",showCountry)\n    if (filtered.length === 1) {\n      for(let keys in filtered[0][\"languages\"]){\n        elements = elements.concat(filtered[0][\"languages\"][keys])\n        console.log(\"elements from conditional: \",elements);\n      }\n    }\n\n    const chooseCountry = (event) => {\n      event.preventDefault()\n      //setCurrentFilter(newSearch)\n      console.log(\"new countr chosen\")\n      console.log(event.target.id)\n      setSelectCountry(event.target.id)\n      console.log(\"d\");\n      filtered = 0\n      console.log(selectCountry);\n      setShowCountry(filtered[0])\n      console.log(filtered)\n      console.log(\"show country is now: \",showCountry);\n    }\n\n    return (\n        <div>\n          {\n            filtered.length===1\n            ? <div>\n                <h1>{filtered[0][\"name\"][\"common\"]}</h1>\n                <div>capital {filtered[0][\"capital\"]}</div>\n                <div>area {filtered[0][\"area\"]}</div>\n                \n                <div><strong>languages:</strong></div>\n                <div>{elements.map(p => \n                <div key = {p}>\n                  {p}\n                </div>\n                )}</div>\n                <div>{filtered[0][\"flag\"]}</div>\n              </div>  \n\n            : filtered.length>10\n              ? <div>Too many matches, specify another filter</div>\n              : selectCountry === \"United Arab Emirates\"\n                ? <div>United Arabs\n                  \n                  {\n                  console.log(\"from the loop\", showCountry)\n                  }\n                  </div>\n                : filtered.map(p => \n                    <div key = {p[\"name\"][\"common\"]}>\n                      {p[\"name\"][\"common\"]}\n                      <form onSubmit={chooseCountry} id={p[\"name\"][\"common\"]}>\n                        <div>\n                          <button type=\"submit\">show</button>\n                        </div>\n                      </form>\n                    </div>\n                    )\n\n            }\n        \n        </div>\n    )\n}\nexport default ShowFiltered\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}