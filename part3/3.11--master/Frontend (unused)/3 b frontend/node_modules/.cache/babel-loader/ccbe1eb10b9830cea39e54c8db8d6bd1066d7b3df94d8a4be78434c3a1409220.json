{"ast":null,"code":"var _jsxFileName = \"/home/gradjaku/Documents/Full Stack/part3/3.11/Frontend (unused)/3 b frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Telephone book app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          name: note.name,\n          number: note.number\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), \"Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CD7dOnufqlZzxfv9PsCgDqGYoys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Note","Notification","Footer","noteService","App","notes","setNotes","newNote","setNewNote","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","important","Math","random","create","returnedNote","concat","handleNameChange","target","value","handleNumberChange","notesToShow","filter","note","toggleImportanceOf","id","find","n","changedNote","update","map","catch","error","setTimeout","name","number"],"sources":["/home/gradjaku/Documents/Full Stack/part3/3.11/Frontend (unused)/3 b frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\n\n\nconst App = () => {\n\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n   const toggleImportanceOf = id => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n  \n      noteService\n        .update(id, changedNote).then(returnedNote => {\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Note '${note.content}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setNotes(notes.filter(n => n.id !== id))\n        })\n    }\n\n  return (\n    <div>\n      <h1>Telephone book app</h1>\n      <Notification message={errorMessage} />\n      <ul>\n        <ul>\n          {notesToShow.map(note => \n            <Note\n              key={note.id}\n              name={note.name}\n              number={note.number}\n            />\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addNote}>\n        Name: <input value={newName} onChange={handleNameChange} />\n        Number: <input value={newNumber} onChange={handleNumberChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      \n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}